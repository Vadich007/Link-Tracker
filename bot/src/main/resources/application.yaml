app:
  telegram-token: ${TELEGRAM_TOKEN} # env variable
  access-type: orm
  message-transport: kafka

kafka:
  topic:
    chats: chats
    remove-link: remove-link
    add-link: add-link
    list-links: get-links
    events: events

api:
  scrapper:
    links: http://localhost:8081/api/v1/links
    tg-chat: http://localhost:8081/api/v1/tg-chat/{id}

db:
  url: jdbc:postgresql://localhost:5432/link_tracker_bot
  username: ${DB_USER} # env variable
  password: ${DB_PASSWORD} # env variable

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/link_tracker_bot
    username: ${DB_USER} # env variable
    password: ${DB_PASSWORD} # env variable
  application:
    name: Bot
  liquibase:
    enabled: false
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  kafka:
    bootstrap-servers: localhost:19092
    producer:
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: bot-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  redis:
    host: localhost
    port: 6379

server:
  port: 8080

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui

app:
  telegram-token: ${TELEGRAM_TOKEN} # env variable
  access-type: jdbc
  message-transport: http

timeout: 10

kafka:
  topic:
    chats: chats
    links: links
    list-links: list-links
    events: events

api:
  scrapper:
    links: http://localhost:8081/api/v1/links
    tg-chat: http://localhost:8081/api/v1/tg-chat/{id}

db:
  url: jdbc:postgresql://localhost:5432/link_tracker_bot
  username: ${DB_USER} # env variable
  password: ${DB_PASSWORD} # env variable

resilience4j:
  retry:
    instances:
      bot:
        maxAttempts: 3
        waitDuration: 500
        exponential-backoff-multiplier: 2
        enable-exponential-backoff: true
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.client.ResourceAccessException
  ratelimiter:
    instances:
      bot:
        limitForPeriod: 3
        timeoutDuration: 0s
        limitRefreshPeriod: 5s
  circuitbreaker:
    instances:
      bot:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumRequiredCalls: 20
        failureRateThreshold: 50
        permittedCallsInHalfOpenState: 2
        waitDurationInOpenState: 5s


spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/link_tracker_bot
    username: ${DB_USER} # env variable
    password: ${DB_PASSWORD} # env variable
  application:
    name: Bot
  liquibase:
    enabled: false
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  kafka:
    bootstrap-servers: localhost:19092
    consumer:
      group-id: bot-consumer-group
  redis:
    host: localhost
    port: 6379

server:
  port: 8080

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui
